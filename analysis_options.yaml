#This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.

include: package:flutter_lints/flutter.yaml

linter:
  rules:
    always_declare_return_types: true # Declare return type for better readability.
    always_use_package_imports: true
    avoid_equals_and_hash_code_on_mutable_classes: true # Avoid overloading operator == and hashCode on classes not marked @immutable
    avoid_escaping_inner_quotes: true # Avoid escaping inner quotes by converting surrounding quotes(avoid \'text to highlight\').
    avoid_print: true # avoid unnecessary print statements
    avoid_slow_async_io: true # Avoid slow asynchronous dart:io methods.
    avoid_web_libraries_in_flutter: false # required for web
    cancel_subscriptions: true # Cancel any all subscriptions to avoid memory leakage.
    close_sinks: true # Close instances of dart:core Sink.
    directives_ordering: true # Adhere to Effective Dart Guide directives sorting conventions.
    empty_constructor_bodies: true # Avoid empty constructor bodies.
    omit_local_variable_types: true # DON'T redundantly type annotate initialized local variables.
    prefer_final_locals: true # DO prefer declaring variables as final if they are not reassigned later in the code.
    prefer_single_quotes: true # Prefer single quotes for string literals.
    sort_child_properties_last: true # Place your child widget at the bottom.
    sort_constructors_first: true # Place your constructors at the top before any methods.
    sort_pub_dependencies: true # DO sort pub dependencies alphabetically (A to Z) in pubspec.yaml.
    sort_unnamed_constructors_first: true # Place unnamed constructors before named constructors.
    unawaited_futures: true # Future results in async function bodies must be awaited or marked unawaited using dart:async.
    use_full_hex_values_for_flutter_colors: true # Prefer an 8-digit hexadecimal integer(0xFFFFFFFF) to instantiate Color.
analyzer:
  errors:
    avoid_print: error # avoid unnecessary print statements
    duplicate_import: error # Treat duplicate imports as errors
    unused_import: error # avoid unnecessary imports
